1. What is hoisting? 

ans : hoisting is acts like Javascript variable or functional variable. 
      whenever we excutes JS program, before executing the code, its circulates some memory for variables and functions.


2. What is scoping?

ans : Scope in JavaScript refers to the current context of code, which determines the accessibility of variables to JavaScript. The two types of scope are local and global: Global variables are those declared outside of a block. Local variables are those declared inside of a block.

3. How are var, let const different?

ans : var declarations are globally scoped or function scoped while let and const are block scoped. var variables can be updated and re-declared within its scope; let variables can be updated but not re-declared; const variables can neither be updated nor re-declared. They are all hoisted to the top of their scope.


4. What are the two main differences in arrow functions?

ans : Unlike regular functions, arrow functions do not have their own this . The value of this inside an arrow function remains the same throughout the lifecycle of the function and is always bound to the value of this in the closest non-arrow parent function.


5. Does Call apply bind work for arrow functions?

ans : In case of arrow functions our methods: Call/Apply & Bind doesn't work as expected. As the documentation of MDN states: "Since arrow functions do not have their own this, the methods call() or apply() can only pass in parameters. thisArg is ignored."


6. What does call apply bind do?

ans : In JavaScript, you can use call() , apply() , and bind() methods to couple a function with an object. This way you can call the function on the object as if it belonged to it. The call() and apply() are very similar methods. They both execute the bound function on the object immediately.


7. What are closures?

ans : A closure is the combination of a function bundled together (enclosed) with references to its surrounding state (the lexical environment). In other words, a closure gives you access to an outer function's scope from an inner function. In JavaScript, closures are created every time a function is created, at function creation time.


8. Write a program to debounce a search bar?

ans : A debounce is a cousin of the throttle, and they both improve the performance of web applications. However, they are used in different cases. A debounce is utilized when you only care about the final state. For example, waiting until a user stops typing to fetch typeahead search results.


9. Write a program to throttle a search bar?

ans : Every time you type something in the search bar, it makes an API ... Throttling ensures that the function executes at a regular interval.


10. create a custom method for an array called myMap, use prototype chain to achieve this
     const arr = [1,2,3]
     arr.myMap(a=>a*5)
     // [ 5, 10, 15 ]
     it should work in this manner

ans :  


11. what does async await mean?

ans : Async/Await is the extension of promises which we get as a support in the language. You can refer Promises in Javascript to know more about it. Async: It simply allows us to write promises based code as if it was synchronous and it checks that we are not breaking the execution thread.


12. What does the this keyword mean?

ans : This” keyword refers to an object that is executing the current piece of code. It references the object that is executing the current function. If the function being referenced is a regular function, “this” references the global object.


13. What are classes? what are getters and setters?

ans : Getters and setters are used to protect your data, particularly when creating classes. For each instance variable, a getter method returns its value while a setter method sets or updates its value. Given this, getters and setters are also known as accessors and mutators, respectively.


14. How do you declare private and static variables in classes in js ?

ans : As static variables are initialized only once and are shared by all objects of a class, the static variables are never initialized by a constructor. Instead, the static variable should be explicitly initialized outside the class only once using the scope resolution operator (::).
      n its current state, there is no “direct” way to create a private variable in JavaScript. 


15.  Create a Calculator class, it should be able to add, reduce multiply and divide. it should have a value getter, and that should return final output. keep the history of changes made as well, and keep that private, and a user should be able to see previous changes made to the value ?

ans : 


16. What is currying?

ans : Currying is an advanced technique of working with functions. It's used not only in JavaScript, but in other languages as well.


17. Write a program to flatten an array
input: [ 1, [ 2, 3 ], [ 3 ], [ [ [ 5]],  6]  ]
output => [ 1, 2, 3, 3, 5, 6 ]


ans : let array = [1,2,3,[1,2],2,[1],3];
      console.log([].concat(...array))